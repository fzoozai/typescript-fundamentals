{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA;AAQA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,EAAD,EAIV;MAHf,IAAI,GAAA,EAAA,CAAA;MACJ,YAAY,GAAA,EAAA,CAAA;MACZ,KAAK,GAAA,EAAA,CAAA;AAEL,EAAA,OAAO,CAAC,GAAR,CAAY;AAAE,IAAA,IAAI,EAAA,IAAN;AAAQ,IAAA,KAAK,EAAA;AAAb,GAAZ;AACA,SAAO;AAAE,IAAA,IAAI,EAAA,IAAN;AAAQ,IAAA,KAAK,EAAA;AAAb,GAAP;AACD,CAPD;;AASA,kBAAkB,CAAC;AAAE,EAAA,IAAI,EAAE,cAAR;AAAwB,EAAA,YAAY,EAAE,KAAtC;AAA6C,EAAA,KAAK,EAAE;AAApD,CAAD,CAAlB,EAEA;AAEA;;AACA,IAAK,WAAL;;AAAA,CAAA,UAAK,WAAL,EAAgB;AACd,EAAA,WAAA,CAAA,WAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACA,EAAA,WAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACD,CAJD,EAAK,WAAW,KAAX,WAAW,GAAA,EAAA,CAAhB,GAMA;;;AACA,IAAK,OAAL;;AAAA,CAAA,UAAK,OAAL,EAAY;AACV,EAAA,OAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAJD,EAAK,OAAO,KAAP,OAAO,GAAA,EAAA,CAAZ;;AAMA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,OAAD,EAAiB,CAAO,CAA9C;;AACA,aAAa,CAAC,OAAO,CAAC,QAAT,CAAb;AACA,OAAO,CAAC,GAAR,CAAY,OAAO,CAAC,QAApB","file":"typescript.77de5100.js","sourceRoot":"..","sourcesContent":["// Interfaces\n\ninterface CryptoCurrency {\n  name: string;\n  abbreviation?: string;\n  price: number;\n}\n\nconst printCryptoDetails = ({\n  name,\n  abbreviation,\n  price,\n}: CryptoCurrency): CryptoCurrency => {\n  console.log({ name, price });\n  return { name, price };\n};\n\nprintCryptoDetails({ name: \"Binance Coin\", abbreviation: \"BNB\", price: 240 });\n\n// Enums used for example: if you need a list of exact items\n\n// numeric enums\nenum CarTypeNums {\n  ELECTRIC, // 0\n  HYBRID, // 1\n  PETROL, // 2\n}\n\n// string enums\nenum CarType {\n  ELECTRIC = \"ELECTRIC\",\n  HYBRID = \"HYBRID\",\n  PETROL = \"PETROL\",\n}\n\nconst createCarType = (carType: CarType) => {};\ncreateCarType(CarType.ELECTRIC);\nconsole.log(CarType.ELECTRIC);\n"]}